{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","maxItems","length","useState","itemOnPage","setItemOnPage","handleScroll","direction","nextPosition","containerWidth","className","style","width","map","image","transform","transition","src","alt","type","onClick","disabled","Math","abs","App","setStep","setFrameSize","setItemWidth","setAnimationDuration","isChecked","setIsChecked","htmlFor","onChange","event","target","value","id","min","max","checked","name","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4690035a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const maxItems = (images.length - frameSize) * itemWidth;\n  const [itemOnPage, setItemOnPage] = useState(0);\n\n  const handleScroll = (direction: 'next' | 'prev') => {\n    const directionFactor = direction === 'next' ? -1 : 1;\n    const nextPosition = itemOnPage + directionFactor * itemWidth * step;\n\n    if (infinite) {\n      if ((direction === 'next' && nextPosition >= -maxItems)\n      || (direction === 'prev' && nextPosition <= 0)) {\n        setItemOnPage(nextPosition);\n      } else {\n        setItemOnPage(direction === 'next' ? 0 : -maxItems);\n      }\n    } else {\n      const canMoveNext = direction === 'next' && nextPosition <= 0;\n      const canMovePrev = direction === 'prev' && nextPosition >= -maxItems;\n\n      if (canMoveNext || canMovePrev) {\n        setItemOnPage(nextPosition);\n      }\n    }\n  };\n\n  const containerWidth = frameSize * itemWidth;\n\n  return (\n    <div className=\"Carousel\">\n      <ul className=\"Carousel__list\" style={{ width: `${containerWidth}px` }}>\n        {images.map((image) => (\n          <li\n            className=\"Carousel_element\"\n            key={image}\n            style={{\n              transform: `translateX(${itemOnPage}px)`,\n              transition: `transform ${animationDuration}ms`,\n            }}\n          >\n            <img src={image} alt={image} style={{ width: `${itemWidth}px` }} />\n          </li>\n        ))}\n      </ul>\n\n      <button\n        type=\"button\"\n        className=\"Carousel_btn\"\n        onClick={() => handleScroll('prev')}\n        disabled={!infinite && itemOnPage >= 0}\n      >\n        Prev\n      </button>\n      <button\n        type=\"button\"\n        className=\"Carousel_btn\"\n        onClick={() => handleScroll('next')}\n        disabled={!infinite && Math.abs(itemOnPage) >= maxItems}\n      >\n        Next\n      </button>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React, { useState } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nconst App: React.FC = () => {\n  const initialState: State = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n  const { images } = initialState;\n  const [step, setStep] = useState(3);\n  const [frameSize, setFrameSize] = useState(3);\n  const [itemWidth, setItemWidth] = useState(130);\n  const [animationDuration, setAnimationDuration] = useState(1000);\n  const [isChecked, setIsChecked] = useState(false);\n\n  const handleCheckboxChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setIsChecked(event.target.checked);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 data-cy=\"title\" className=\"App__title\">\n        {`Carousel with ${images.length} images`}\n      </h1>\n      <div className=\"container\">\n        <div className=\"list_item\">\n          <label htmlFor=\"width\" className=\"label_item\">\n            Width:\n          </label>\n          <input\n            onChange={(event) => setItemWidth(+event.target.value)}\n            type=\"number\"\n            className=\"input_item\"\n            value={itemWidth}\n            id=\"width\"\n          />\n        </div>\n        <div className=\"list_item\">\n          <label htmlFor=\"step\" className=\"label_item\">\n            Step:\n          </label>\n          <input\n            onChange={(event) => setStep(+event.target.value)}\n            type=\"number\"\n            className=\"input_item\"\n            value={step}\n            id=\"step\"\n            min={1}\n            max={images.length}\n          />\n        </div>\n        <div className=\"list_item\">\n          <label htmlFor=\"frameSize\" className=\"label_item\">\n            Frame Size:\n          </label>\n          <input\n            onChange={(event) => setFrameSize(+event.target.value)}\n            type=\"number\"\n            className=\"input_item\"\n            value={frameSize}\n            id=\"frameSize\"\n            min={1}\n            max={images.length}\n          />\n        </div>\n        <div className=\"list_item\">\n          <label htmlFor=\"animationDuration\" className=\"label_item\">\n            Animation Duration:\n          </label>\n          <input\n            onChange={(event) => setAnimationDuration(+event.target.value)}\n            type=\"number\"\n            className=\"input_item\"\n            value={animationDuration}\n            id=\"animationDuration\"\n          />\n        </div>\n        <div className=\"list_item\">\n          <label htmlFor=\"infinite\" className=\"label_item\">\n            Infinite\n          </label>\n          <input\n            onChange={handleCheckboxChange}\n            type=\"checkbox\"\n            className=\"input_item\"\n            checked={isChecked}\n            id=\"1\"\n            name=\"infinite\"\n          />\n        </div>\n      </div>\n\n      <Carousel\n        images={images}\n        itemWidth={itemWidth}\n        infinite={isChecked}\n        step={step}\n        frameSize={frameSize}\n        animationDuration={animationDuration}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}