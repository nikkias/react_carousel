{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","itemOnPage","setItemOnPage","maxItems","length","containerWidth","className","style","width","map","image","transform","transition","src","alt","type","onClick","Math","min","disabled","max","App","setStep","setFrameSize","setItemWidth","setAnimationDuration","isChecked","setIsChecked","htmlFor","onChange","event","target","value","id","checked","name","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6141fd04.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\n type Props = {\n   images: string[],\n   step: number,\n   frameSize: number,\n   itemWidth: number,\n   animationDuration: number,\n   infinite: boolean,\n };\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [itemOnPage, setItemOnPage] = useState(0);\n\n  const maxItems = (images.length - frameSize) * itemWidth;\n\n  const getPrevImage = () => {\n    setItemOnPage(Math.min(itemOnPage + itemWidth * step, 0));\n\n    if (itemOnPage === 0) {\n      setItemOnPage(maxItems);\n    }\n  };\n\n  const getNextImage = () => {\n    setItemOnPage(Math.max(itemOnPage - itemWidth * step, -maxItems));\n\n    if (itemOnPage === -maxItems && infinite) {\n      setItemOnPage(0);\n    }\n  };\n\n  const containerWidth = frameSize * itemWidth;\n\n  return (\n    <div className=\"Carousel\">\n      <ul\n        className=\"Carousel__list\"\n        style={{ width: `${containerWidth}px` }}\n      >\n        {images.map(image => (\n          <li\n            className=\"Carousel_element\"\n            key={image}\n            style={{\n              transform: `translateX(${itemOnPage}px)`,\n              transition: `${animationDuration}ms`,\n            }}\n          >\n            <img\n              src={image}\n              alt={`${image}`}\n              style={{ width: `${itemWidth}px` }}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <button\n        type=\"button\"\n        className=\"Carousel_btn\"\n        onClick={getPrevImage}\n        disabled={!itemOnPage}\n      >\n        Prev\n      </button>\n      <button\n        type=\"button\"\n        className=\"Carousel_btn\"\n        onClick={getNextImage}\n        data-cy=\"next\"\n        disabled={itemOnPage === -maxItems && !infinite}\n      >\n        Next\n      </button>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React, { useState } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nconst App: React.FC = () => {\n  const initialState:State = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n  const { images } = initialState;\n  const [step, setStep] = useState(3);\n  const [frameSize, setFrameSize] = useState(3);\n  const [itemWidth, setItemWidth] = useState(130);\n  const [animationDuration, setAnimationDuration] = useState(1000);\n  const [isChecked, setIsChecked] = useState(false);\n\n  const handleCheckboxChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setIsChecked(event.target.checked);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 data-cy=\"title\" className=\"App__title\">\n        { `Carousel with ${images.length} images`}\n      </h1>\n      <div className=\"container\">\n        <div className=\"list_item\">\n          <label htmlFor=\"width\" className=\"label_item\">\n            Width:\n          </label>\n          <input\n            onChange={event => setItemWidth(+event.target.value)}\n            type=\"number\"\n            className=\"input_item\"\n            value={itemWidth}\n            id=\"width\"\n          />\n        </div>\n        <div className=\"list_item\">\n          <label htmlFor=\"step\" className=\"label_item\">\n            Step:\n          </label>\n          <input\n            onChange={event => setStep(+event.target.value)}\n            type=\"number\"\n            className=\"input_item\"\n            value={step}\n            id=\"step\"\n            min={1}\n            max={images.length}\n          />\n        </div>\n        <div className=\"list_item\">\n          <label htmlFor=\"frameSize\" className=\"label_item\">\n            Frame Size:\n          </label>\n          <input\n            onChange={event => setFrameSize(+event.target.value)}\n            type=\"number\"\n            className=\"input_item\"\n            value={frameSize}\n            id=\"frameSize\"\n            min={1}\n            max={images.length}\n          />\n        </div>\n        <div className=\"list_item\">\n          <label htmlFor=\"animationDuration\" className=\"label_item\">\n            Animation Duration:\n          </label>\n          <input\n            onChange={event => setAnimationDuration(+event.target.value)}\n            type=\"number\"\n            className=\"input_item\"\n            value={animationDuration}\n            id=\"animationDuration\"\n          />\n        </div>\n        <div className=\"list_item\">\n          <label htmlFor=\"infinite\" className=\"label_item\">\n            Infinite\n          </label>\n          <input\n            onChange={handleCheckboxChange}\n            type=\"checkbox\"\n            className=\"input_item\"\n            checked={isChecked}\n            id=\"1\"\n            name=\"infinite\"\n          />\n        </div>\n      </div>\n\n      <Carousel\n        images={images}\n        itemWidth={itemWidth}\n        infinite={isChecked}\n        step={step}\n        frameSize={frameSize}\n        animationDuration={animationDuration}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}